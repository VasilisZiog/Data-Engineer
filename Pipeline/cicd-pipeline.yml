# below is stated how the pipeline will be triggered(when a change will happen in main branch)
trigger:
  - main

# in azure devops there is a variable group with the following name which contains variables that will be used for the deployment in each environment
variables:
  - group: group1
  

# the following are parameters that can be used anywhere in this yml code
  
  - name: notebooksPath
    value: "DLT_pipeline"
  - name: location
    value: "eastus"

# compute power that Microsoft provides to execute a CI/CD pipeline in devops (https://learn.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml)
pool: 
  name: vziog
  demands: agent.name -equals ZIOGOU-NB


# below are defined the stages
stages:

#stage 1: deployment of resources that are managed from resource manager part1
  - template: templates/run-bicep.yml
    parameters:
      stageid: "Deploy_part1_to_Dev_Environment"
      env: "dev"
# this is the environment of devops where you can manage deployments, view resource status, etc
      environmentName: $(dev-environment-name)
      resourceGroupName: $(dev-resource-group-name)
      location: $(location)
# this is the service connecion to the resource group where dev databricks workspace is (recommended type is service principal automatic through resource manager)
      serviceConnection: $(dev-service-connection-name)
      bicepTemplateFile: "Pipeline/ARM/main_part1.bicep"
      bicepParametersFile: "Pipeline/ARM/main_part1.bicepparam"

#stage 2: configure integration runtime
  - stage: "Configure integartion runtime1"
    displayName: "Configure Integration Runtime of Data Factory1"
    jobs:
    - deployment: Deploy
      displayName: "Configure Integration Runtime of Data Factory2"
      environment: $(dev-environment-name)
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self

              # Azure CLI Task to run PowerShell script
              - task: AzureCLI@2
                inputs:
                  azureSubscription: $(dev-service-connection-name)  # Service Connection Name
                  scriptType: 'ps'  # Use PowerShell
                  scriptLocation: 'inlineScript'  # Inline script
                  inlineScript: |
                    # Change directory to where your script is located
                    cd $(Build.SourcesDirectory)/Pipeline/ARM

                    # Execute the PowerShell script
                    .\RegisterIntegrationRuntime2.ps1

                    # Optional: add logging or further processing
                    Write-Host "Integration Runtime configuration completed."